This repository contains the full source code and hardware designs for the
Arduino shield used for teaching DMX at the University of Aberdeen. The Arduino
Mega 2560 compatible shield allows an Ardunio to operate as either a DMX bus
master or slave.

The dmx-arduino Board (Rev I and II) was designed by Cyril Danilesvski in 2014.
The software was written and is updated by Tom Jones, 2015-2017.

# Uploading the code

Open the Arduino project from dmxcontroller/dmxcontroller.ino.

Import the libraries from the libraries/ into the Arduino ide. It is very
important that you do not allow the aruduino ide to update these libraries.

Compile and upload.

# Operation

Program mode and dmx addressing are controlled by the 12 dip switches on the
main sheild pcb. Program status is indicated using the three LEDs in most
program modes or using additional LEDs on the DE9 connector in other modes.

There is a default program that can is used in any empty slot in the program
mode. This program will blink the green LED only.

The red led on the board will give dmx status. If valid dmx data has been seen
on the bus with DMXTIMEOUT the red led will flash. If no valid dmx data has
been seen for 1 sec the led will be lit solidly. This functionality operates 
outside the control of any of the programs.

When the main loop of the program detects a change in program mode the green
LED will be flashed momentarily. This flash can be difficult to see when
turning off DIP switches, but is easier to see when turning on DIP switches.

## DIP Switches

The 12 dip switches form a 12 bit number with the MSB starting with switch 1.
The program mode is encoded in the top three bits of the dip switches and the
dmx address is encoded in the bottom 9 bits.

                  1 1 1
1 2 3 4 5 6 7 8 9 0 1 2
P P P D D D D D D D D D


The software has 8 modes (3 bits):

0 - Test Mode
1 - Digital control
2 - PWM Control 
3 - Servo control
4 - Neopixel control
5 - 
6 - 
7 - 


0 - Test Mode
	The programmed dmx address will be displayed on the 8 DE2PINs with the 9th
	bit displayed on the green LED.

	If a dmx address of 0 is programmed on the toggle switches, the slot sequence
	0x55 0xFF 0x0F 0xF0 will be output as the first 4 dmx slots.

	In test mode the program will read from a 10K pot connected to POT_PIN. The
	10bit value from the ADC will be scaled(divided by 4) to fit with in a dmx
	byte. If this value is greater than 128 the yellow LED will be enabled. The
	scaled value from the pot will be written to the dmx bus at the set dmx
	address.

1 - Digital control
	8 dmx channels will be read from the bus. If the dmx value is
	greater than 128 the corresponding DE2PIN will set high.

	The yellow LED shows the status of channel 1.

2 - PWM Control 
	The first 8 dmx channels will be read from the bus. The corresponding
	DE2PINs will be given a pwm values from the dmx value.

	The yellow LED shows the status of channel 1.


3 - Servo control
	The servo will be driven to a position based off the dmx value at the set
	dmx address.

	The yellow LED shows the status of channel 1.

4 - Neopixel control
	An encoded colour value will be read from all 511 dmx slots. Each byte
	encodes an RGB value. These values are split out then set to an attached
	LED strip using the Neopixel Library. They are sent as a time division
	multiplex as 3 serialised 8-bit colour values.

	The yellow LED shows the status of channel 1.

